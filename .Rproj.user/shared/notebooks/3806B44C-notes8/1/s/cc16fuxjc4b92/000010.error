{"frames":[{"func":"predict(lm_fit, class_test)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.model_fit(lm_fit, class_test)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict_numeric(object = object, new_data = new_data, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict_numeric.model_fit(object = object, new_data = new_data, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_tidy(pred_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict(object = object$fit, newdata = new_data, type = \"response\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.lm(object = object$fit, newdata = new_data, type = \"response\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".checkMFClasses(cl, m)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(gettextf(\"variable '%s' was fitted with type \\\"%s\\\" but type \\\"%s\\\" was supplied\", \n    names(old)[wrong], old[wrong], new[wrong]), call. = FALSE, \n    domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: variable 'Species' was fitted with type \"numeric\" but type \"factor\" was supplied\n"}